apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarr
  name: sonarr
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
        release: sonarr
    spec:
      # initContainers:
      #   - name: init-permissions
      #     image: busybox
      #     command: ["sh", "-c", "chown -R {{ .Values.PUID }}:{{ .Values.PGID }} /tv && chmod -R 755 /tv"]
      #     volumeMounts:
      #       - mountPath: /tv
      #         name: media
      #         subPath: tv
      containers:
        - image: 'linuxserver/sonarr:latest'
          imagePullPolicy: IfNotPresent
          name: sonarr
          env:
            - name: PUID
              value: {{ quote .Values.PUID }}
            - name: PGID
              value: {{ quote .Values.PGID }}
          securityContext:
            runAsUser: {{ .Values.PUID }}
            runAsGroup: {{ .Values.PGID }}
          ports:
            - containerPort: 8989
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /config
              name: sonarr-config
            - mountPath: /downloads/transmission
              name: transmission
              subPath: sonarr
            - mountPath: /tv
              name: media
              subPath: tv
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-server-nfs-pvc
        - name: transmission
          persistentVolumeClaim:
            claimName: transmission-downloaded-pvc
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-pvc
