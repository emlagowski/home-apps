{{ if .Values.plex.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: plex
  name: plex
spec:
  replicas: {{ .Values.plex.replicas }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: plex
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: plex
    spec:
      hostNetwork: true
      nodeSelector:
        storage: "true"
      containers:
        - image: 'linuxserver/plex:latest'
          imagePullPolicy: IfNotPresent
          name: plex
          env:
            - name: TZ
              value: {{ .Values.plex.timezone }}
            - name: PLEX_CLAIM
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.plex.secret.claimTokenKey }}
                  name: {{ .Values.plex.secret.name }}
            - name: ADVERTISE_IP
              value: https://{{ .Values.ingress.host }}
          ports:
            - containerPort: 32400
              name: pms
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: data
              subPath: {{ .Values.library.root }}
            - mountPath: /config
              name: data
              subPath: {{ .Values.plex.configPath }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolume.claimName }}
{{ end }}