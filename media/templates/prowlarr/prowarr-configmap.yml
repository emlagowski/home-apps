apiVersion: v1
kind: ConfigMap
metadata:
  name: prowlarr-configmap
data:
  config.xml: |-
    <Config>
      <UrlBase>{{ .Values.prowlarr.contextPath }}</UrlBase>
      <ApiKey>{{ .Values.prowlarr.apiKey }}</ApiKey>
    </Config>
  custom-init.sh: |-
    #!/bin/bash
    echo "running init script in background"
    /init-scripts/init.sh &
  init.sh: |-
    #!/bin/bash

    while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' -X 'GET' 'http://localhost:9696{{ .Values.prowlarr.contextPath }}/api/v1/health' -H 'X-Api-Key: {{ .Values.prowlarr.apiKey }}')" != "200" ]]; 
    do 
      echo "waiting for API to return 200"
      sleep 5; 
    done

    echo "call all init curls"
    for f in /init-scripts/*.json; 
    do 
        z=(${f//./ })
        contextPath=${z[1]}
        echo "calling $contextPath for $f"
        curl -k -X 'POST' \
            "http://localhost:9696{{ .Values.prowlarr.contextPath }}/api/v1/$contextPath" \
            -H 'accept: application/json' \
            -H "X-Api-Key: {{ .Values.prowlarr.apiKey }}" \
            -H 'Content-Type: application/json' \
            --data @$f
    done
  1.downloadclient.json: |-
    {
      "enable": true,
      "protocol": "torrent",
      "name": "Transmission",
      "categories": [],
      "fields": [
        {
          "name": "host",
          "value": "{{ .Values.transmission.service.name }}"
        },
        {
          "name": "port",
          "value": {{ .Values.transmission.service.port }}
        },
        {
          "name": "urlBase",
          "value": "{{ .Values.transmission.contextPath }}"
        }
      ],
      "implementation": "Transmission",
      "configContract": "TransmissionSettings"
    }
  2.applications.json: |-
    {
      "syncLevel": "fullSync",
      "name": "Radarr",
      "fields": [
        {
          "name": "prowlarrUrl",
          "value": "http://{{ .Values.prowlarr.service.name }}:{{ .Values.prowlarr.service.port }}{{ .Values.prowlarr.contextPath }}"
        },
        {
          "name": "baseUrl",
          "value": "http://{{ .Values.radarr.service.name }}:{{ .Values.radarr.service.port }}{{ .Values.radarr.contextPath }}"
        },
        {
          "name": "apiKey",
          "value": "{{ .Values.radarr.apiKey }}"
        }
      ],
      "implementation": "Radarr",
      "configContract": "RadarrSettings"
    }
  3.applications.json: |-
    {
      "syncLevel": "fullSync",
      "name": "Sonarr",
      "fields": [
        {
          "name": "prowlarrUrl",
          "value": "http://{{ .Values.prowlarr.service.name }}:{{ .Values.prowlarr.service.port }}{{ .Values.prowlarr.contextPath }}"
        },
        {
          "name": "baseUrl",
          "value": "http://{{ .Values.sonarr.service.name }}:{{ .Values.sonarr.service.port }}{{ .Values.sonarr.contextPath }}"
        },
        {
          "name": "apiKey",
          "value": "{{ .Values.sonarr.apiKey }}"
        }
      ],
      "implementation": "Sonarr",
      "configContract": "SonarrSettings"
    }
  4.indexer.json: |-
    {
      "enable": true,
      "name": "1337x",
      "priority": 25,
      "appProfileId": 1,
      "definitionName": "1337x",
      "implementation": "Cardigann",
      "configContract": "CardigannSettings",
      "fields": [
        {
          "name": "definitionFile",
          "value": "1337x"
        },
        {
          "name": "downloadlink",
          "value": 0
        },
        {
          "name": "downloadlink2",
          "value": 1
        },
        {
          "name": "sort",
          "value": 2
        },
        {
          "name": "type",
          "value": 1
        }
      ]
    }